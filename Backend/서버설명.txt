find는 조건을 걸었을때 처음 나오는 것을 보여주는것
filter는 그 조건을 다 보여줄 때 사용한다.

서버 안에 string 형태일때는 호출 할때도 string 형태로 해야되거
만약에 숫자일때는 parseInt?를 해줘야한다.

ID설계할 때 에러 메세지 작성할때 {message: `sorry &{id} is not found`};
할 때 status 코드를 204 no contents를 하면 에러 메세지가 출력 되지 않는다.
404 not found를 할 때만 json 메세지가 출력된다.


push 메서드 : 배열의 마지막에 새로운 요소를 추가한 후, 변경된 배열의 길이를 반환
pop 메서드 : 배열의 마지막 요소를 제거한 후, 제거한 요소를 반환
unshift 메서드 : 배열의 첫 번째 자리에 새로운 요소를 추가한 후, 변경된 배열의 길이를 반환
shift 메서드 : 배열의 첫 번째 요소를 제거한 후, 제거한 요소를 반환

----------------------------------------------------------------------
delete 요소는 status(204)를 쓰는데 이 경우 204만 보내주면 postman에서
계속 로딩중이 뜬다 그래서 sendStatus를 사용해서 보내줘야 postman에서 그 status값을
보여줄수 있다.


mvc 모델을 data controller 로 나눌줄 알아야한다.
이러면 ui에서 요청하면 controller층으로 들어와서 controller층에서 data층을 요청을 보내서 data를 받아서 다시 ui에게 주는 것을 말하는것이다.
그래서 기존에 router에서 받아오는 데이터, 함수들의 모습을 다 같이 넣어 놓았지만 mvc모델을 하고 나면 데이터 탐색값들을 data층에 넣고
그 데이터들로 찾아내는 함수들을 controller층으로 보내서 router에서는 직관적으로 어떤 기능들을 사용하는지만 깔끔하게 볼수 있고 직관적으로 코드를 보여줄수 있게 한다.

